name: CD Production
on:
  push:
    tags:
      - "*"

jobs:
  # どのサービスをデプロイするかを確認する
  changes:
    name: Changes
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      functions: ${{ steps.filter.outputs.functions }}
      hosting: ${{ steps.filter.outputs.hosting }}
    steps:
      # ソースコードをチェックアウト
      - name: Check out repository
        uses: actions/checkout@v2

      # 変更を検出する
      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            functions:
              - 'functions/**'
            hosting:
              - 'hosting/**'

  deploy_functions:
    name: Deploy Functions
    needs:
      - changes
    if: ${{ needs.changes.outputs.functions == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 60
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID_PROD }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_PROD }}
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT_PROD }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm install
        working-directory: ./functions
      - name: Deploy to Functions
        run: |
          npm install -g firebase-tools
          firebase deploy --only functions --force --project=${{ env.PROJECT_ID }}
